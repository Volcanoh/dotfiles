let mapleader=";"
filetype on
filetype plugin on 
noremap <Leader>b ^

noremap<Leader>e $
noremap<Leader>a A
imap <C-f> <right>
imap <C-b> <left>
" 共享复制、粘贴
noremap <Leader>y "+y
noremap <Leader>p "+p

" 关闭当前窗口
nmap <Leader>q :q<CR>
" 定义保存当前窗口
nmap <Leader>w :w<CR>

noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>
noremap n nzz
noremap N Nzz
noremap j gjzz
noremap k gkzz
" 定义快捷建在结对之间跳转，助记pair
nmap <Leader>pa %
" 设置实时搜索功能
set incsearch
" 设置自身命令行补全
set wildmenu
" 开启兼容模式
set nocompatible
" 总是显示状态栏
set laststatus=2
" 显示光标当前位置
set ruler
" 开启行号显示
set number
" 高亮显示当前行/列
set cursorline
set cursorcolumn
" 禁止光标闪烁
set gcr=a:block-blinkon0
set mouse-=a
syntax on
syntax enable
set number
set tabstop=4
set shiftwidth=4
set expandtab
filetype indent on
set incsearch
set hlsearch
"remember zM-->fold all  zR -->unfold all  za -->fold/ unfold
set foldmethod=indent 
imap jk <Esc>
vmap jk <Esc>
" 将外部命令 wmctrl 控制窗口最大化的命令行参数封装成一个 vim 的函数
fun! ToggleFullscreen()
    call system("wmctrl -ir " . v:windowid . " -b toggle,fullscreen")
endf
" 全屏开/关快捷键
map <silent> <F11> :call ToggleFullscreen()<CR>

nnoremap <leader>rs :source ~/.vimrc<CR>
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-repeat' "use . to repeat plugin command
Plugin 'tpope/vim-surround' "ysiw]
Plugin 'tpope/vim-commentary' "a motion to comment [gc]
Plugin 'tpose/vim-git' "for git
Plugin 'tpose/vim-fugitive' "for git
Plugin 'DoxygenToolkit.vim'
Plugin 'Raimondi/delimitMate' "auto add {} [] () and so on"
Plugin  'scrooloose/syntastic'
Plugin 'ervandew/supertab'
Plugin 'sirver/ultisnip'
Plugin 'honza/vim-snippets'
Plugin 'L9'
Plugin 'FuzzyFinder'
Plugin 'kien/ctrlp.vim'
Plugin 'vim-scripts/qiushibaike'
"Plugin 'itchyny/calendar.vim'
Plugin 'hotoo/calendar-vim'
Plugin 'altercation/vim-colors-solarized'
Plugin 'tomasr/molokai'
Plugin 'gmarik/ingretu'
Plugin 'rainux/vim-desert-warm-256'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
Plugin 'kshenoy/vim-signature'
Plugin 'Yggdroot/hiPairs'
"自动生成tag{{{
Plugin 'DfrankUtil'
Plugin 'Vimprj'
Plugin 'vim-scripts/indexer.tar.gz'
"}}}
Plugin 'Valloric/YouCompleteMe'
Plugin 'vim-latex/vim-latex' " latex
call vundle#end()

"ultisnips
let g:UltiSnipsExpandTrigger="<c-c>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"
" begin Calendar-vim{{{
let g:calendar_list = [
    \   {'name': 'Tasks', 'path': '~/KuaiPan/tasks', 'ext': 'task'},
    \   {'name': 'Diary', 'path': '~/KuaiPan/diary', 'ext': 'diary'},
\ ]
let g:calendar_current_idx = 1
" end}}}

" begin Doxygen{{{
let g:DoxygenToolkit_briefTag_funcName = "yes"
" for C++ style, change the '@' to '\'
let g:DoxygenToolkit_commentType = "C++"
let g:DoxygenToolkit_briefTag_pre = "\\brief "
let g:DoxygenToolkit_templateParamTag_pre = "\\tparam "
let g:DoxygenToolkit_paramTag_pre = "\\param "
let g:DoxygenToolkit_returnTag = "\\return "
let g:DoxygenToolkit_throwTag_pre = "\\throw " " @exception is also valid
let g:DoxygenToolkit_fileTag = "\\file "
let g:DoxygenToolkit_dateTag = "\\date "
let g:DoxygenToolkit_authorTag = "\\author "
"let g:DoxygenToolkit_versionTag = "\\version "
let g:DoxygenToolkit_blockTag = "\\name "
let g:DoxygenToolkit_classTag = "\\class "
let g:DoxygenToolkit_authorName = "volcanoh <huang.volcano@gmail.com>"
let g:DoxygenToolkit_blockHeader="--------------------------------------------------------------"
let g:DoxygenToolkit_blockFooter="--------------------------------------------------------------"
let g:DoxygenToolkit_licenseTag="GPL"
let g:doxygen_enhanced_color = 1
" C++ style
let g:DoxygenToolKit_startCommentBlock = "/// "
let g:DoxygenToolKit_interCommentBlock = "/// "
"creat doxgen comment
map <leader>dd :Dox<CR>
map <leader>da :DoxAuthor<CR>
map <leader>dl :DoxLic<cr>
"let g:load_doxygen_syntax = 1
" end}}}
" begin Calendar{{{
let g:calendar_google_calendar = 1
let g:calendar_google_task = 1
" end}}
" begin git{{{ 
nnoremap <leader>gw :Gwrite<CR>
nnoremap <leader>gc :Gcommit -v<CR>
nnoremap <leader>gs :Gstatus \| 7<CR>
inoremap <leader>gw <Esc><leader>gw
inoremap <leader>gc <Esc><leader>gc
inoremap <leader>gs <Esc><leader>gs
" end}}}

" beginFuF customisations "{{{
let g:fuf_modesDisable = []
nnoremap <leader>h :FufHelp<CR>
nnoremap <leader>1  :FufTagWithCursorWord<CR>
nnoremap <leader>11 :FufTag<CR>
nnoremap <leader>2  :FufFileWithCurrentBufferDir<CR>
nnoremap <leader>22 :FufFile<CR>
nnoremap <leader>3  :FufBuffer<CR>
nnoremap <leader>4  :FufDirWithCurrentBufferDir<CR>
nnoremap <leader>44 :FufDir<CR>
nnoremap <leader>5  :FufBufferTag<CR>
nnoremap <leader>55 :FufBufferTagAll<CR>
nnoremap <leader>6  :FufMruFile<CR>
nnoremap <leader>7  :FufLine<CR>
nnoremap <leader>8  :FufChangeList<CR>
nnoremap <leader>9  :FufTaggedFile<CR>
" end}}}

" begin delimitMate mappings{{{
let delimitMate_matchpairs = "(:),[:],{:},<:>"
au FileType cpp let b:delimitMate_matchpairs = "(:),[:],{:}"
" end }}}

"befin config syntastic {{{
let g:syntastic_check_on_open=1
let g:syntastic_cpp_include_dirs = ['/usr/include/']
let g:syntastic_cpp_remove_include_errors = 1
let g:syntastic_cpp_check_header = 1
let g:syntastic_cpp_compiler = 'clang++'
let g:syntastic_cpp_compiler_options = '-std=c++11 -stdlib=libstdc++'
"set error or warning signs
let g:syntastic_error_symbol = '✗'
let g:syntastic_warning_symbol = '⚠'
"whether to show balloons
let g:syntastic_enable_balloons = 1
" end}}}
"begin latex output pdf{{{
"mappings for latex-box plugin{{{
map <silent> <Leader>ls :silent !/Applications/Skim.app/Contents/SharedSupport/displayline
            \ <C-R>=line('.')<CR> "<C-R>=LatexBox_GetOutputFile()<CR>" "%:p" <CR>
autocmd filetype tex nnoremap F10 :!latexmk -pdf % 
"}}}
let g:Tex_DefaultTargetFormat='pdf'
let g:Tex_CompileRule_pdf = 'pdflatex --synctex=-1 -src-specials -interaction=nonstopmode $*'
"end }}}
" #############配色方案###############
set background=dark
set t_Co=256
let g:rehash256 = 1
"let g:solarized_termcolors=256
let g:molokai_original = 1
"colorscheme solarized
colorscheme molokai
let g:Powerline_colorscheme='solarized256'
"" #############indexer##############
" 设置插件 indexer 调用 ctags 的参数
" " 默认 --c++-kinds=+p+l，重新设置为 --c++-kinds=+p+l+x+c+d+e+f+g+m+n+s+t+u+v
" " 默认 --fields=+iaS 不满足 YCM 要求，需改为 --fields=+iaSl
let g:indexer_ctagsCommandLineOptions="--c++-kinds=+p+l+x+c+d+e+f+g+m+n+s+t+u+v --fields=+iaSl --extra=+q"

" ######NERDtrss########################
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
map <C-n> :NERDTreeToggle<CR>
" ######ctags#################################
:set tags+=./tags
" 正向遍历同名标签
nmap <Leader>tn :tnext<CR>
" 反向遍历同名标签
nmap <Leader>tp :tprevious<CR>

" #############YouCompleteMe#######
let g:ycm_server_use_vim_stdout = 1
let g:ycm_confirm_extra_conf = 0
"let g:ycm_server_log_level = 'debug'

"let g:ycm_extra_conf_globlist = ['~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py']
let g:ycm_global_ycm_extra_conf = '~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'
let g:ycm_warning_symbol = '>>'
let g:ycm_error_symbol = '*>'
"nnoremap <leader>jd :tab split<CR>:exec("YcmCompleter GoTo ")<CR>
nnoremap <leader>jd :vsp <CR>:exec("YcmCompleter GoTo ")<CR>
nnoremap <F5> :YcmForceCompileAndDiagnostics<CR>
" <lead> d can display diags
" ##############################################################
" open ctag in tab/vertical split
map <C-\> :tab split<CR>:exec("tag ".expand("<cword>"))<CR>
map <leader><C-\> :vsp <CR>:exec("tag ".expand("<cword>"))<CR>
" open ctag in tab/vertical split
map <leader><C-\> :tab split<CR>:exec("tag ".expand("<cword>"))<CR>
map <C-\> :vsp <CR>:exec("tag ".expand("<cword>"))<CR>
